openapi: 3.1.0
info:
  title: Proxy for Google Docs API
  description: >
    This is a Google Docs API proxy that contains tools for agent to retrieve and apply batch updates to Google Docs documents. 
    All request parameters, query parameters, and bodies will be passed through and forwarded to the Google Docs API directly, adhering strictly to the Google Docs API specification.
  version: 1.0.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://docs.wellcare.workers.dev
security:
  - googleOAuth: []
components:
  securitySchemes:
    googleOAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://docs.wellcare.workers.dev/auth2/v2/auth
          tokenUrl: https://docs.wellcare.workers.dev/auth2/token
          scopes:
            https://www.googleapis.com/auth/drive: Full access to Google Drive
  schemas: {}
paths:
  /v1/documents/{documentId}/structure:
    get:
      operationId: documents_structure
      summary: Inspect the structure of a Google Docs document.
      description: |
        Inspect the documentâ€™s structure before applying any updates or changes.
        The response includes both the document's content, styles and other metadata, which can be large. 
      parameters:
        - in: path
          name: documentId
          required: true
          description: The ID of the document to retrieve. If user provide document link, please extract the documentId from it.
          schema:
            type: string
          example: 1s0gTYKvaqW7VHoSQg53Mu43KmA4im0mPGEoReAsmbO4
        
  /v1/documents/{documentId}/batchUpdate:
    post:
      operationId: documents_batchUpdate
      summary: Apply multiple updates to a Google Docs document
      description: |
        Applies multiple updates to a Google Docs document in a single action. 
        If user provide document link, please extract the documentId from it.
        For markdown format, you must convert to Google Docs format first.
      parameters:
        - in: path
          name: documentId
          required: true
          description: The ID of the document to apply the batch updates to.
          schema:
            type: string
            example: 1s0gTYKvaqW7VHoSQg53Mu43KmA4im0mPGEoReAsmbO4
      requestBody:
        description: |
          The request body should contain a list of update requests in the Google Docs API batch update format.
          Valid requests will be applied sequentially. If any update is invalid, the entire batch fails.
        content:
          application/json:
            schema:
              type: object
              properties:                 
                requests:
                  type: array
                  items:
                    type: object
                    description: A single update request, such as inserting text or formatting. Follow strictly Google Docs API specs.
                    properties: {}
              required: 
                - requests
              example:
                requests:
                  - insertText:
                      text: Hello, world!
                      location:
                        index: 1

  /v1/documents/{documentId}/markdown/insert:
    post:
      tags:
        - Document
      operationId: documents_markdown_insert
      summary: Insert a markdown content to Google Docs
      description: |
        Insert a markdown content to Google Docs. 
        If user provide document link, please extract the documentId from it.
        The request body should contain a markdown content in base64 encoding.
      parameters:
        - in: path
          name: documentId
          required: true
          description: The ID of the document to apply the batch updates to.
          schema:
            type: string
          example: 1Q9pDyZsea-7wQAtJGD2XUu-skcDrg3Xz4Sev0atnGVw
      requestBody:
        description: The request body must contain the base64 encoded markdown content.
        content:
          application/json:
            schema:
              type: object
              properties:
                markdown:
                  type: string
                  description: The markdown content to insert, must be base64-encoded to avoid special characters issues.
                  example: IyBIZWxsbywgd29ybGQh
              required: [markdown]
                      