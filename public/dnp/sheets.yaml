openapi: 3.1.0
info:
  title: Google Sheets Proxy API
  description: A proxy API to simplify interactions with the Google Sheets API for chat agents. All request params, queries and bodies follow the Google Sheets API specification.
  version: 1.0.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://gooproxy.wellcare.workers.dev
security:
  - googleOAuth: []
paths:
  /spreadsheets:
    post:
      summary: Create a New Spreadsheet
      operationId: createSpreadsheet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spreadsheet'

  /spreadsheets/{spreadsheetId}/batchUpdate:
    post:
      summary: Batch Update a Spreadsheet
      operationId: batchUpdateSpreadsheet
      parameters:
        - name: spreadsheetId
          in: path
          schema:
            type: string          
          required: true
          description: The ID of the spreadsheet
      requestBody:
        required: true        
        content:          
          application/json:
            schema:
              type: object
              properties:
                requests:
                  type: array
                  items:
                    $ref: '#/components/schemas/Request'
                  description: A list of updates to apply to the spreadsheet. Requests will be applied in the order they are specified.
                includeSpreadsheetInResponse:
                  type: boolean
                  description: Determines if the update response should include the spreadsheet resource.
                responseRanges:
                  type: array
                  items:
                    type: string
                  description: Limits the ranges included in the response spreadsheet. Meaningful only if includeSpreadsheetInResponse is 'true'.
                responseIncludeGridData:
                  type: boolean
                  description: True if grid data should be returned. Meaningful only if includeSpreadsheetInResponse is 'true'. This parameter is ignored if a field mask was set in the request.


  /spreadsheets/{spreadsheetId}/sheets/{sheetId}/copyTo:
    post:
      summary: Copy a Sheet to Another Spreadsheet
      operationId: copySheetToSpreadsheet
      parameters:
        - name: spreadsheetId
          in: path
          schema:
            type: string
          required: true
          description: The ID of the spreadsheet
        - name: sheetId
          in: path
          schema:
            type: string          
          required: true
          description: The ID of the sheet to copy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destinationSpreadsheetId:
                  type: string
                  description: The ID of the destination spreadsheet



  /spreadsheets/{spreadsheetId}/values/batchUpdate:
    post:
      summary: Sets values in one or more ranges of a spreadsheet.
      operationId: batchUpdateValues
      parameters:
        - name: spreadsheetId
          in: path
          schema:
            type: string          
          required: true
          description: The ID of the spreadsheet
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                valueInputOption:
                  type: string
                  enum:
                    - RAW
                    - USER_ENTERED
                  description: How the input data should be interpreted.
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/ValueRange'
                  description: The new values to apply to the spreadsheet.
                includeValuesInResponse:
                  type: boolean
                  description: Determines if the update response should include the values of the cells that were updated.
                responseValueRenderOption:
                  type: string
                  enum:
                    - FORMATTED_VALUE
                    - UNFORMATTED_VALUE
                    - FORMULA
                  description: Determines how values in the response should be rendered.
                responseDateTimeRenderOption:
                  type: string
                  enum:
                    - SERIAL_NUMBER
                    - FORMATTED_STRING
                  description: Determines how dates, times, and durations in the response should be rendered.

  /spreadsheets/{spreadsheetId}/values/{searchRange}/append:
    post:
      summary: Append Values to a Spreadsheet
      description: |
        Appends values to a spreadsheet. The input range is used to search for existing data and find a "table" within that range. 
        Values will be appended to the next row of the table, starting with the first column of the table.  
      operationId: appendValues
      parameters:
        - name: spreadsheetId
          in: path
          schema:
            type: string          
          required: true
          description: The ID of the spreadsheet to update.
        - name: searchRange
          in: path
          schema:
            type: string          
          required: true
          description: The A1 notation of a range to search for a logical table of data. Values are appended after the last row of the table.
        - name: valueInputOption
          in: query
          schema:
            type: string
            enum:
              - RAW
              - USER_ENTERED
          description: How the input data should be interpreted. RAW will not be parsed and will be stored as-is.USER_ENTERED strings may be converted to numbers, dates, etc. following the same rules that are applied when entering text into a cell via the Google Sheets UI.s.
        - name: insertDataOption
          in: query
          schema:
            type: string
            enum:
              - OVERWRITE
              - INSERT_ROWS
          description: How the input data should be inserted.
        - name: includeValuesInResponse
          in: query
          schema:
            type: boolean
          description: Determines if the update response should include the values of the cells that were appended. By default, responses do not include the updated values.
        - name: responseValueRenderOption
          in: query
          schema:
            type: string
            enum:
              - FORMATTED_VALUE
              - UNFORMATTED_VALUE
              - FORMULA
          description: Determines how values in the response should be rendered. The default render option is FORMATTED_VALUE.
        - name: responseDateTimeRenderOption
          in: query
          schema:
            type: string
            enum:
              - SERIAL_NUMBER
              - FORMATTED_STRING
          description: Determines how dates, times, and durations in the response should be rendered. This is ignored if responseValueRenderOption is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValueRange'

  /spreadsheets/{spreadsheetId}/values/batchClear:
    post:
      summary: Clear Values from a Spreadsheet
      description: Clears one or more ranges of values from a spreadsheet. The caller must specify the spreadsheet ID and one or more ranges (all other properties such as formatting and data validation are kept).
      operationId: batchClearValues
      parameters:
        - name: spreadsheetId
          in: path
          schema:
            type: string          
          required: true
          description: The ID of the spreadsheet to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ranges:
                  type: array
                  items:
                    type: string
                  description: The ranges to clear, specified in A1 notation or R1C1 notation.

  /spreadsheets/{spreadsheetId}/values/batchGet:
    get:
      summary: Batch Get Values from a Spreadsheet
      operationId: batchGetValues
      description: Returns one or more ranges of values from a spreadsheet.
      parameters:
        - name: spreadsheetId
          in: path
          schema:
            type: string          
          required: true
          description: The ID of the spreadsheet to retrieve data from.
        - name: ranges
          in: query
          schema:
            type: array
            items:
              type: string
          required: true
          description: The A1 notation or R1C1 notation of the ranges to retrieve values from.
        - name: majorDimension
          in: query
          schema:
            type: string
            enum:
              - DIMENSION_UNSPECIFIED
              - ROWS
              - COLUMNS
            default: ROWS
          description: |
            The major dimension that results should use.
            For example, if the spreadsheet data is: A1=1, B1=2, A2=3, B2=4, then:
            - Requesting `ranges=["A1:B2"], majorDimension=ROWS` returns `[[1,2],[3,4]]`.
            - Requesting `ranges=["A1:B2"], majorDimension=COLUMNS` returns `[[1,3],[2,4]]`.
        - name: valueRenderOption
          in: query
          schema:
            type: string
            enum:
              - FORMATTED_VALUE
              - UNFORMATTED_VALUE
              - FORMULA
            default: FORMATTED_VALUE
          description: Determines how values should be represented in the output. 
        - name: dateTimeRenderOption
          in: query
          schema:
            type: string
            enum:
              - SERIAL_NUMBER
              - FORMATTED_STRING
            default: SERIAL_NUMBER
          description: |
            Determines how dates, times, and durations should be represented in the output.
            This is ignored if `valueRenderOption` is `FORMATTED_VALUE`. 
            The default option is `SERIAL_NUMBER`, which represents dates as numbers.


  /spreadsheets/{spreadsheetId}/preview:
    get:
      summary: Get preview data for all sheets
      description: Retrieves metadata and a preview of the first few rows (default A1:T10) for all sheets in the spreadsheet.
      operationId: getPreview
      parameters:
        - in: path
          name: spreadsheetId
          required: true
          schema:
            type: string
          example: 1D_kABCDEfghijkLMNOPqrSTUVwxYZ
          description: The ID of the spreadsheet to retrieve.
        - in: query
          name: range
          schema:
            type: string
          example: Sheet1!A1:C10
components:
  securitySchemes:
    googleOAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://oauth2.googleapis.com/token
          scopes:
            https://www.googleapis.com/auth/spreadsheets: Full access to Google Sheets
  schemas:
    Spreadsheet:
      type: object
      properties:
        properties:
          type: object
          description: Overall properties of a spreadsheet.
          properties:
            title:
              type: string
              description: The title of the spreadsheet.
        sheets:
          type: array
          description: An array of sheet objects.
          items:
            $ref: '#/components/schemas/Sheet'
    Sheet:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GridData'
        charts:
          type: array
          items:
            type: object
    GridData:
      type: object
      properties:
        startRow:
          type: integer
          description: The start row of the data.
        startColumn:
          type: integer
          description: The start column of the data.
        rowData:
          type: array
          items:
            $ref: '#/components/schemas/RowData'
    RowData:
      type: object      
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/CellData'
    CellData:
      type: object      
      properties:
        userEnteredValue:
          type: object
          description: The user-entered value in the cell.

    ValueRange:
      type: object
      properties:
        range:
          type: string
          description: |
            The range the values cover, in A1 notation. For output, this range indicates the entire requested range, even though the values will exclude trailing rows and columns.
            When appending values, this field represents the range to search for a table, after which values will be appended.
        majorDimension:
          type: string
          enum:
            - ROWS
            - COLUMNS
          default: ROWS
          description: |
            The major dimension of the values. 
            For output, if the spreadsheet data is: A1=1,B1=2,A2=3,B2=4, then requesting range=A1:B2,majorDimension=ROWS will return [[1,2],[3,4]], whereas requesting range=A1:B2,majorDimension=COLUMNS will return [[1,3],[2,4]].
            For input, with range=A1:B2,majorDimension=ROWS then [[1,2],[3,4]] will set A1=1,B1=2,A2=3,B2=4. With range=A1:B2,majorDimension=COLUMNS then [[1,2],[3,4]] will set A1=1,B1=3,A2=2,B2=4.
            When writing, if this field is not set, it defaults to ROWS.
        values:
          type: array
          items:
            type: array
            items:
              oneOf:
                - type: boolean
                - type: string
                - type: number
          description: |
            The data that was read or to be written. This is an array of arrays, the outer array representing all the data and each inner array representing a major dimension. Each item in the inner array corresponds with one cell.
            For output, empty trailing rows and columns will not be included.
            For input, supported value types are: bool, string, and double. Null values will be skipped. To set a cell to an empty value, set the string value to an empty string.

    Request:
      type: object
      description: A single kind of update to apply to a spreadsheet. 
      properties:
        updateSpreadsheetProperties:
          type: object
        updateSheetProperties:
          type: object
        updateDimensionProperties:
          type: object
        updateNamedRange:
          type: object
        repeatCell:
          type: object
        addNamedRange:
          type: object
        deleteNamedRange:
          type: object
        addSheet:
          type: object
        deleteSheet:
          type: object
        autoFill:
          type: object
        cutPaste:
          type: object
        copyPaste:
          type: object
        mergeCells:
          type: object
        unmergeCells:
          type: object
        updateBorders:
          type: object
        updateCells:
          type: object
        addFilterView:
          type: object
        appendCells:
          type: object
        clearBasicFilter:
          type: object
        deleteDimension:
          type: object
        deleteEmbeddedObject:
          type: object
        deleteFilterView:
          type: object
        duplicateFilterView:
          type: object
        duplicateSheet:
          type: object
        findReplace:
          type: object
        insertDimension:
          type: object
        insertRange:
          type: object
        moveDimension:
          type: object
        updateEmbeddedObjectPosition:
          type: object
        pasteData:
          type: object
        textToColumns:
          type: object
        updateFilterView:
          type: object
        deleteRange:
          type: object
        appendDimension:
          type: object
        addConditionalFormatRule:
          type: object
        updateConditionalFormatRule:
          type: object
        deleteConditionalFormatRule:
          type: object
        sortRange:
          type: object
        setDataValidation:
          type: object
        setBasicFilter:
          type: object
        addProtectedRange:
          type: object
        updateProtectedRange:
          type: object
        deleteProtectedRange:
          type: object
        autoResizeDimensions:
          type: object
        addChart:
          type: object
        updateChartSpec:
          type: object
        updateBanding:
          type: object
        addBanding:
          type: object
        deleteBanding:
          type: object
        createDeveloperMetadata:
          type: object
        updateDeveloperMetadata:
          type: object
        deleteDeveloperMetadata:
          type: object
        randomizeRange:
          type: object
        addDimensionGroup:
          type: object
        deleteDimensionGroup:
          type: object
        updateDimensionGroup:
          type: object
        trimWhitespace:
          type: object
        deleteDuplicates:
          type: object
        updateEmbeddedObjectBorder:
          type: object
        addSlicer:
          type: object
        updateSlicerSpec:
          type: object
        addDataSource:
          type: object
        updateDataSource:
          type: object
        deleteDataSource:
          type: object
        refreshDataSource:
          type: object
        cancelDataSourceRefresh:
          type: object              